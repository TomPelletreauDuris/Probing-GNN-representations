/home/tpelletreaudur/.local/lib/python3.10/site-packages/torch_geometric/deprecation.py:26: UserWarning: 'data.DataLoader' is deprecated, use 'loader.DataLoader' instead
  warnings.warn(out)
2.5.3
Data(x=[116, 116], edge_index=[2, 1016], edge_attr=[1016, 1], y=[1])
['x', 'y', 'edge_index', 'edge_attr']
ValuesView({'x': tensor([[ 0.0000,  0.4543,  0.2477,  ...,  0.1753,  0.2247, -0.1751],
        [ 0.4543,  0.0000, -0.2204,  ..., -0.1947, -0.2258, -0.1434],
        [ 0.2477, -0.2204,  0.0000,  ..., -0.0521, -0.0804, -0.2025],
        ...,
        [ 0.1753, -0.1947, -0.0521,  ...,  0.0000,  0.6875, -0.1364],
        [ 0.2247, -0.2258, -0.0804,  ...,  0.6875,  0.0000,  0.0929],
        [-0.1751, -0.1434, -0.2025,  ..., -0.1364,  0.0929,  0.0000]]), 'edge_index': tensor([[  0,   0,   0,  ..., 114, 115, 115],
        [  1,  10,  12,  ..., 113,  94, 109]]), 'edge_attr': tensor([[0.4543],
        [0.5913],
        [0.4224],
        ...,
        [0.6875],
        [0.4846],
        [0.5437]]), 'y': tensor([0])})
Net(
  (conv_layers): ModuleList(
    (0): GATConv(116, 128, heads=4)
    (1): GATConv(512, 128, heads=4)
    (2): GATConv(512, 128, heads=4)
    (3): GATConv(512, 128, heads=4)
    (4): GATConv(512, 128, heads=4)
  )
  (batch_norms): ModuleList(
    (0): BatchNorm(512)
    (1): BatchNorm(512)
    (2): BatchNorm(512)
    (3): BatchNorm(512)
    (4): BatchNorm(512)
  )
  (lin1): Linear(512, 128, bias=True)
  (lin2): Linear(128, 2, bias=True)
  (bn1): BatchNorm(128)
  (bn2): BatchNorm(2)
)
tensor([217, 137, 426,  ..., 643, 205, 434])
Test Loss: 0.898, Train Acc: 1.000 Test Acc: 0.618
[tensor([[-0.6501,  1.5063, -0.6263,  ...,  0.1070, -0.6308,  1.3620],
        [-0.6501,  1.5095, -0.6263,  ...,  0.1011, -0.6308,  1.3586],
        [-0.6501,  1.6746, -0.6263,  ...,  0.1597, -0.6308,  1.3802],
        ...,
        [ 0.1398, -0.5811, -0.6263,  ..., -0.0327, -0.6308,  0.0067],
        [-0.6501,  0.6072, -0.6263,  ..., -0.5451, -0.6308, -0.4759],
        [ 0.7672, -0.4667,  1.4115,  ..., -0.5451,  0.1888, -0.6195]]), tensor([[-0.5485, -0.5750, -0.6811,  ..., -0.5202, -0.6860, -0.5076],
        [-0.5485, -0.5750, -0.6811,  ..., -0.5164, -0.6860, -0.5076],
        [-0.5485, -0.5266, -0.6811,  ..., -0.0931, -0.6860, -0.5076],
        ...,
        [ 0.1697,  0.0903,  0.2202,  ..., -0.6146, -0.0741, -0.5076],
        [ 0.5794, -0.2339, -0.6811,  ...,  0.5444,  0.1772, -0.5076],
        [-0.3943,  0.1070, -0.6811,  ...,  1.5562,  0.3440, -0.5076]]), tensor([[ 3.5155, -0.5605,  1.5742,  ..., -0.3665,  0.2539,  3.0251],
        [ 3.5019, -0.5605,  1.4980,  ..., -0.3121,  0.2363,  2.9197],
        [ 3.9742, -0.5605,  1.3952,  ..., -0.0194,  0.0176,  2.6635],
        ...,
        [ 1.7707, -0.4090,  0.1663,  ..., -0.5056, -0.5437, -0.0205],
        [-0.5076, -0.5605, -0.5909,  ..., -0.1309, -0.5437, -0.5706],
        [-0.5076, -0.5605, -0.5909,  ..., -0.5056,  0.0800,  1.2267]]), tensor([[-0.5186, -0.5439, -0.2984,  ..., -0.5901,  1.9691,  2.8512],
        [-0.5186,  4.4172, -0.5944,  ...,  2.7784, -0.5980, -0.4852],
        [-0.5186,  4.4172, -0.5944,  ...,  2.7784, -0.5980, -0.4852],
        ...,
        [-0.3429, -0.4765, -0.2204,  ..., -0.5874, -0.5980, -0.4852],
        [-0.5186, -0.5439, -0.5944,  ..., -0.5901,  0.4776, -0.3214],
        [-0.5186, -0.5439, -0.5944,  ..., -0.5901,  0.4132, -0.3086]]), tensor([[-0.5319, -0.6081, -0.3951,  ...,  5.4061, -0.4859, -0.5406],
        [-0.5319, -0.6081, -0.4477,  ...,  5.3943, -0.4936, -0.5406],
        [-0.5319, -0.6081, -0.4477,  ...,  5.3943, -0.4936, -0.5406],
        ...,
        [-0.1736,  0.4377, -0.3657,  ..., -0.4450,  0.4249, -0.5406],
        [-0.5319,  0.0383, -0.5220,  ..., -0.3036,  0.2381, -0.5406],
        [-0.2825,  0.1534, -0.5220,  ..., -0.4450,  0.4373, -0.5406]]), tensor([[ 1.6738e+00,  4.3770e-01, -2.2553e-02,  8.6041e-01, -2.0183e-01,
         -7.0599e-02,  2.0166e+00,  6.6881e+00,  1.1712e+00,  1.5080e+00,
         -2.0430e-01,  3.1195e+00,  3.8050e+00,  1.0075e+00,  7.0598e-01,
          2.5864e+00, -4.0977e-01,  3.8937e+00,  5.0616e+00, -4.0946e-02,
          1.6149e-01,  1.0209e+00,  2.4435e+00,  2.1574e+00,  6.8540e-01,
          5.4850e-01, -5.1229e-01, -5.5634e-01,  4.2942e-01,  1.7786e+00,
          7.2041e+00,  3.2215e+00,  8.9836e-01, -1.6207e-01,  3.7895e+00,
          6.9751e-01, -5.0521e-01,  2.6020e-01,  2.1326e+00, -4.4005e-01,
          2.9028e+00,  2.0244e+00,  2.6808e+00,  4.3019e+00,  2.8692e+00,
          5.6350e+00,  2.7601e-01,  1.2898e+00,  3.6698e+00,  1.9750e+00,
          1.8517e+00,  6.1216e+00, -1.3284e-01,  5.9510e-01, -5.4533e-01,
          4.1318e-01,  2.0630e+00,  5.8607e-01,  1.1353e+00,  4.4833e-01,
          2.0883e+00,  2.8826e+00,  4.9161e+00,  5.0785e-01,  2.6645e+00,
         -5.2643e-01,  6.3549e-01,  2.6397e+00,  3.1283e+00,  7.3897e-01,
          5.6068e+00,  5.4444e+00,  6.0491e+00,  5.6263e+00,  1.6386e+00,
          1.7377e+00,  6.8140e-01,  2.2960e+00,  3.6186e+00,  5.1360e-01,
          2.3645e+00,  5.4794e+00,  1.6126e+00,  4.7080e+00,  1.8719e+00,
          2.1328e+00,  3.8981e-01,  3.0526e+00,  4.0262e-01, -5.1827e-01,
          1.0875e+00,  3.5471e-01,  4.8315e+00, -4.5806e-01,  4.5140e-01,
          8.5232e-01, -6.2073e-01,  4.1071e+00,  1.9293e+00, -4.1392e-04,
          4.3534e-01,  5.1231e-01,  1.7848e+00, -6.0318e-01,  3.2928e+00,
          4.5221e+00,  8.8263e-01,  1.6608e+00,  3.1307e+00,  5.4917e-01,
          1.7631e+00,  9.1939e-01,  5.2751e+00,  1.4381e+00, -6.1480e-01,
          2.5944e+00,  2.2443e+00,  9.5959e-01,  2.8700e-01,  2.3390e+00,
         -4.5377e-01,  2.6936e-01,  3.1395e+00,  2.9139e+00, -2.8115e-01,
          1.7842e+00,  5.2259e+00,  5.7427e-02,  1.1831e+00,  2.3097e+00,
          2.8110e+00,  8.2915e-01,  1.8306e+00,  5.6731e+00,  1.4667e+00,
          6.1708e+00,  2.0310e+00,  1.2179e+00,  4.0105e+00,  2.4515e-01,
         -5.3797e-01,  3.6340e+00, -5.0480e-01, -4.7424e-02,  5.0605e+00,
          2.7821e+00,  3.9446e+00,  3.5787e-01, -5.2192e-01, -3.4559e-01,
         -2.3214e-01,  3.1889e+00,  9.1851e-01,  1.4046e+00,  4.9441e+00,
          3.3982e+00,  2.4437e+00,  2.3538e-02,  6.4408e-01,  1.3735e+00,
          2.4042e+00,  7.5077e-02,  3.9785e-01,  8.6827e-02,  6.3641e+00,
          2.0280e+00,  2.4300e+00,  3.3139e+00, -5.1448e-01,  3.6086e+00,
          2.6779e+00, -4.0400e-01,  1.8002e+00, -3.1920e-01,  7.0377e-01,
          8.8356e-01,  2.8100e+00,  1.6252e+00,  1.5965e+00,  7.0917e-01,
          1.0612e+00,  3.0177e+00,  2.5264e+00,  4.9667e-01,  9.1524e-01,
          4.5485e+00,  1.1894e+00,  5.6422e+00,  5.5732e+00, -3.1309e-01,
         -4.2256e-01,  2.2964e+00,  1.2884e+00,  7.2075e-01,  1.4099e+00,
         -5.3555e-01,  3.7499e+00,  2.5517e+00,  2.4573e+00, -1.0769e-01,
          2.9085e+00, -7.4094e-03, -7.7038e-02,  7.5486e-02, -5.3777e-01,
         -5.2760e-01, -4.1113e-02,  6.1043e-01,  1.2672e-01,  1.0480e+00,
          1.1445e+00,  2.2253e+00,  1.0631e-01,  3.0213e+00, -5.6368e-01,
          2.7566e+00,  7.8306e-01,  8.5224e-01,  3.9851e+00,  1.5758e+00,
          1.3241e+00,  6.7342e-01,  2.9335e+00,  4.3626e+00,  4.8561e+00,
         -3.6539e-01, -5.3004e-01,  9.5585e-01,  1.8969e-01,  1.5431e+00,
          9.5182e-01, -5.4476e-01,  3.4724e+00,  3.3264e+00,  3.6424e-01,
          8.7196e-01,  4.0616e+00,  2.8396e-01,  4.6927e-01,  1.0750e+00,
          2.2986e+00,  3.1027e+00,  1.6946e+00, -5.8100e-01,  2.4258e+00,
          3.8497e+00,  1.4576e+00,  8.8581e-01,  2.4667e+00,  1.5307e+00,
          1.5121e+00,  3.9737e+00, -5.0646e-01, -5.4556e-01,  2.6687e+00,
          3.1351e+00,  1.6460e+00,  8.3168e+00,  2.3414e+00,  1.5683e+00,
          3.3780e+00,  2.3349e+00,  3.4644e-02, -5.6326e-01, -5.0179e-01,
          1.0977e+00,  1.5397e+00,  1.3312e+00,  3.0583e-01, -4.8854e-01,
          1.9918e+00, -5.0841e-02, -1.3425e-01,  4.4126e-01,  6.8435e-01,
          3.9615e+00,  2.5607e+00,  2.0289e+00, -4.2710e-01,  9.7329e-01,
         -5.5063e-01,  5.9078e+00,  3.8846e+00, -2.1276e-01,  1.7064e+00,
          5.9254e-01,  9.1893e-01, -2.0642e-01,  3.4805e-01,  3.0206e+00,
          1.4456e+00,  3.4264e+00,  3.6448e-01,  1.8479e+00,  5.0373e+00,
          1.4547e+00,  1.9346e+00,  1.4868e+00,  2.1906e+00,  4.1077e+00,
          2.2824e+00,  1.7301e+00,  2.1497e+00,  4.2198e+00,  2.5250e+00,
          4.0234e+00,  4.2837e+00,  3.2536e-02,  8.0062e-01, -5.0453e-01,
          2.7016e+00, -1.0123e-01, -4.3315e-02,  2.9958e+00,  4.3752e+00,
          2.8443e+00,  9.0793e-01,  4.9866e-01,  3.2647e-02,  4.3975e+00,
          6.3746e+00,  2.3291e+00,  5.6992e-01,  1.1788e+00,  3.2132e+00,
          1.0432e+00,  1.6845e-02, -4.8515e-01,  1.6104e+00, -5.1536e-01,
          1.7749e+00,  6.3262e+00,  4.1541e-01,  2.6892e+00,  3.5335e+00,
          3.4226e+00,  2.2942e+00,  9.0063e-01,  1.8387e+00, -5.1470e-01,
          3.8883e-01,  9.6953e-01,  3.6349e-01,  3.6848e+00,  2.9707e-01,
          1.5175e+00, -5.9595e-01,  9.8261e-01,  5.8378e-01, -1.2401e-01,
          7.2369e-01,  1.3534e-01, -2.2773e-01, -1.6826e-01,  1.0233e+00,
          1.9131e+00, -4.3530e-01,  4.7432e+00,  8.9250e-01,  4.8578e+00,
          1.5524e+00,  3.1180e+00,  5.4734e+00,  1.4276e+00,  5.8208e+00,
          7.5704e-01,  2.2398e+00,  2.2572e+00,  3.4562e-01,  2.9513e+00,
          1.7111e+00,  1.7791e-01,  3.9171e-01,  1.1500e+00, -5.4078e-01,
          3.0147e+00, -4.4593e-01,  1.9501e+00,  5.1394e-01,  3.5517e+00,
          2.2019e+00,  2.3156e+00, -5.4179e-01, -3.2796e-01,  2.2082e+00,
          6.5350e-03,  7.1421e-01,  2.1242e+00,  3.5583e+00,  1.1227e+00,
          1.3652e+00, -2.6962e-01, -4.8464e-01,  1.6683e+00,  4.2060e+00,
          8.8342e-01, -1.5590e-01,  1.4704e+00,  1.0557e+00,  6.1620e-01,
          1.8272e+00,  5.5609e+00,  3.6286e-01,  2.2106e-01, -5.0652e-01,
          2.6962e+00,  1.3915e+00, -9.6870e-02,  5.1692e-01, -4.6099e-01,
          4.9223e+00,  2.1773e+00,  4.3268e+00, -4.9658e-01,  6.9184e-01,
          1.6935e-01,  1.5701e+00, -2.0312e-01,  1.0754e+00,  4.7203e+00,
          8.5093e+00,  6.5547e+00, -1.6901e-01,  3.0382e+00,  3.7824e+00,
          2.7794e+00,  3.9673e+00, -1.8095e-02,  1.1359e+00,  3.5560e-01,
          5.3579e+00,  1.2809e+00,  9.2014e-01,  1.6650e+00,  3.6716e+00,
          2.1919e+00, -1.6202e-01,  3.3260e+00,  3.2532e+00,  7.4325e-01,
          4.7402e+00,  2.8726e-01, -3.8904e-02,  6.8684e-02,  2.8462e+00,
          1.5069e+00,  5.6609e-01,  2.1938e-01,  3.9955e+00,  3.9301e-01,
          2.2000e+00,  1.7978e+00, -5.0647e-01,  8.5223e-03,  2.5271e+00,
          8.7931e-01,  6.0261e+00,  3.0857e-01,  2.2313e+00,  2.0413e+00,
         -1.8655e-01,  7.0530e+00, -5.0594e-01,  2.0389e+00,  1.6026e+00,
          1.1586e-01, -4.7729e-01, -4.2657e-01, -4.9700e-01,  5.5132e+00,
          3.5565e+00,  7.8521e-02,  2.7096e+00,  3.7729e+00,  3.4547e+00,
          6.1094e+00,  5.2612e+00,  2.1485e+00,  4.6512e+00,  1.2288e+00,
         -2.3127e-01, -5.0265e-01, -5.7889e-01,  2.3419e+00,  2.4580e-01,
          1.6026e+00,  7.4375e-01,  4.2357e+00,  2.8633e+00,  5.3281e+00,
         -6.3366e-01,  4.7622e+00,  1.1329e+00, -1.3447e-01, -5.8048e-01,
          3.8624e+00,  2.4927e+00,  4.1407e+00,  1.2220e+00,  4.3653e+00,
          4.3797e+00, -5.8711e-01,  2.9854e+00,  3.2021e+00,  4.0666e+00,
          4.8307e-01,  9.6155e-02, -5.1462e-01,  1.5582e+00,  5.4061e+00,
          6.3164e-01, -5.4057e-01]]), tensor([[0.0000, 0.0000, 1.5702, 0.0000, 0.3482, 0.0000, 1.0360, 0.0000, 2.0576,
         1.4781, 0.0000, 0.0000, 0.4294, 0.0000, 0.0000, 2.3971, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 2.8498, 2.7184, 1.6373, 0.0000, 0.0000, 0.0000,
         0.3354, 0.0000, 2.4207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 2.1224, 0.0000, 0.0000, 1.1485, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.1202, 0.0000, 0.0000, 0.1816,
         0.0000, 0.0000, 0.0000, 3.1424, 2.1871, 2.1100, 1.7006, 3.5801, 0.0000,
         0.0000, 0.6101, 2.4306, 0.0000, 0.0000, 1.8743, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.3275, 0.0000, 0.0000, 1.2138, 0.0000, 0.7661,
         0.2410, 3.6466, 0.0000, 0.0000, 0.0163, 0.0000, 0.0000, 0.0000, 0.0000,
         3.4316, 1.3364, 0.0000, 0.0000, 1.7025, 0.0000, 0.0000, 3.0425, 1.8395,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.4255, 0.0000, 0.0000,
         2.9007, 0.0000, 0.0000, 0.0000, 0.0000, 3.2158, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0702, 0.0000, 0.0000,
         0.0000, 1.7924]]), tensor([[-1.7385,  2.4007]])]
8
Traceback (most recent call last):
  File "/gpfs/home3/tpelletreaudur/Probing-GNN-representations/FC_probing_GAT.py", line 263, in <module>
    train_x8 = np.array([np.array(feat[8], dtype=float) for feat in train_features])
  File "/gpfs/home3/tpelletreaudur/Probing-GNN-representations/FC_probing_GAT.py", line 263, in <listcomp>
    train_x8 = np.array([np.array(feat[8], dtype=float) for feat in train_features])
IndexError: list index out of range

JOB STATISTICS
==============
Job ID: 8012995
Cluster: snellius
User/Group: tpelletreaudur/tpelletreaudur
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:32:41
CPU Efficiency: 50.44% of 01:04:48 core-walltime
Job Wall-clock time: 00:04:03
Memory Utilized: 2.16 GB
Memory Efficiency: 7.70% of 28.00 GB
