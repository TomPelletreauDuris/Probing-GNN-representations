/home/tpelletreaudur/.local/lib/python3.10/site-packages/torch_geometric/deprecation.py:26: UserWarning: 'data.DataLoader' is deprecated, use 'loader.DataLoader' instead
  warnings.warn(out)
GPU available? False
Data(x=[116, 116], edge_index=[2, 1294], edge_attr=[1294, 1], y=[1])
['y', 'x', 'edge_attr', 'edge_index']
ValuesView({'x': tensor([[ 0.0000,  0.2857,  0.0804,  ...,  0.2032,  0.1674,  0.0906],
        [ 0.2857,  0.0000, -0.3860,  ...,  0.1637, -0.0359,  0.1674],
        [ 0.0804, -0.3860,  0.0000,  ..., -0.0175, -0.0309,  0.0296],
        ...,
        [ 0.2032,  0.1637, -0.0175,  ...,  0.0000,  0.2329, -0.1452],
        [ 0.1674, -0.0359, -0.0309,  ...,  0.2329,  0.0000,  0.0183],
        [ 0.0906,  0.1674,  0.0296,  ..., -0.1452,  0.0183,  0.0000]]), 'edge_index': tensor([[  0,   0,   0,  ..., 113, 113, 114],
        [ 10,  12,  14,  ..., 111, 112, 108]]), 'edge_attr': tensor([[0.7785],
        [0.6966],
        [0.5463],
        ...,
        [0.6415],
        [0.4745],
        [0.5401]]), 'y': tensor([0])})
Number of samples: 1604
Net(
  (conv_layers): ModuleList(
    (0): GCNConv(116, 128)
    (1): GCNConv(128, 128)
    (2): GCNConv(128, 128)
    (3): GCNConv(128, 128)
    (4): GCNConv(128, 128)
  )
  (batch_norms): ModuleList(
    (0): BatchNorm(128)
    (1): BatchNorm(128)
    (2): BatchNorm(128)
    (3): BatchNorm(128)
    (4): BatchNorm(128)
  )
  (lin1): Linear(128, 128, bias=True)
  (lin2): Linear(128, 2, bias=True)
  (bn1): BatchNorm(128)
  (bn2): BatchNorm(2)
)
tensor([1365,  984, 1017,  ...,  260,  678,   83])
Test Loss: 0.649, Train Acc: 1.000 Test Acc: 0.605
[tensor([[ 0.4064, -0.0267, -0.7264,  ...,  3.2874,  1.1828, -0.6279],
        [-0.6312, -0.2531, -0.7264,  ...,  2.9873,  0.8007, -0.6279],
        [ 0.1298,  0.2632, -0.7264,  ...,  2.8838,  1.1173, -0.6279],
        ...,
        [ 0.2128, -0.5664,  1.8177,  ..., -0.5866, -0.5848, -0.6279],
        [ 0.5301, -0.5664,  0.7115,  ..., -0.5866, -0.5848, -0.1652],
        [ 0.9005,  0.1611,  0.9784,  ..., -0.5866, -0.5848, -0.1431]]), tensor([[-0.6392, -0.6927,  4.6876,  ..., -0.6361, -0.6827, -0.6981],
        [-0.6392, -0.6927,  4.3031,  ..., -0.6361, -0.6827, -0.6981],
        [-0.1670, -0.6927,  4.2197,  ..., -0.6361, -0.6827, -0.6981],
        ...,
        [-0.6392, -0.0221, -0.5913,  ..., -0.6361, -0.3656, -0.6981],
        [ 0.3077, -0.6927, -0.2694,  ..., -0.2274,  0.1591, -0.6886],
        [-0.3551, -0.6927, -0.5913,  ..., -0.6361, -0.0452, -0.2431]]), tensor([[ 3.5410e+00, -5.8504e-01, -5.2517e-01,  ...,  2.5586e+00,
         -6.8325e-01,  1.5430e+00],
        [ 3.6959e+00, -5.8504e-01, -6.1830e-01,  ...,  2.4372e+00,
         -6.8325e-01,  1.6025e+00],
        [ 3.7923e+00, -5.8504e-01, -6.1830e-01,  ...,  2.4710e+00,
         -6.8325e-01,  1.6465e+00],
        ...,
        [-2.0871e-02, -5.8504e-01, -3.7203e-01,  ..., -7.2614e-01,
         -1.1379e-02, -1.0097e-01],
        [ 5.9574e-01, -5.8504e-01,  6.1342e-02,  ...,  2.8185e-02,
         -6.8325e-01, -6.0704e-03],
        [ 3.4166e-01, -5.8504e-01,  1.5685e-02,  ..., -1.8725e-01,
         -4.6025e-01,  5.1173e-04]]), tensor([[ 1.3174,  2.7719, -0.6280,  ..., -0.6419, -0.6274,  0.1816],
        [ 1.3413,  2.6399, -0.6280,  ..., -0.6419, -0.6274,  0.0814],
        [ 1.4100,  2.5333, -0.6280,  ..., -0.6419, -0.6274,  0.3073],
        ...,
        [-0.4240, -0.1250, -0.6280,  ..., -0.6419,  0.1547,  0.7486],
        [-0.5388,  0.1606, -0.6280,  ..., -0.6419,  0.6445, -0.0486],
        [-0.2866, -0.6654, -0.6280,  ..., -0.2010, -0.4188,  0.1114]]), tensor([[-0.4203, -0.3755, -0.5777,  ..., -0.6125,  0.0402,  3.1960],
        [-0.4116, -0.3596, -0.5777,  ..., -0.6125,  0.0053,  3.1281],
        [-0.5480, -0.4977, -0.5777,  ..., -0.6125, -0.0657,  3.1811],
        ...,
        [-0.5929, -0.5277, -0.5777,  ...,  0.6040, -0.0968, -0.0532],
        [-0.5929, -0.1613, -0.5777,  ..., -0.0768, -0.5938,  0.2280],
        [-0.5929, -0.6206, -0.5777,  ..., -0.6125, -0.3322,  0.3061]]), tensor([[ 0.6107,  0.7796,  0.7379,  2.1645,  2.9331,  2.7954,  3.2655,  1.0140,
          3.3541,  1.2247,  0.5290,  3.6697,  5.2938,  1.5728,  2.6508,  1.8473,
          5.2166,  0.5248,  2.8755,  1.8268,  2.1561,  2.8103,  5.0749,  1.7255,
          4.5086,  2.6913, -0.2482,  1.1134,  1.9835,  0.9681,  1.3084,  1.0821,
          0.3953,  1.9918,  1.5047,  0.9643,  0.5407,  1.3075,  0.4567,  1.3314,
          1.3005, -0.0269,  2.2139,  4.1909,  3.3111,  2.8016,  0.4783,  2.6806,
          2.5264,  1.4890,  2.5633,  0.9609,  2.4989,  1.4071,  1.0667,  1.7895,
          3.6588,  1.4847,  1.7347,  0.2249,  0.1407,  0.7277,  2.7521,  4.7756,
          2.8165,  1.9498,  0.9144,  1.8093,  1.1772,  0.4322,  3.0620,  1.4485,
          3.7459,  1.8082,  1.7400,  0.2904,  2.3659,  1.0962,  2.5594,  0.8028,
          2.0824,  1.8336,  0.1985,  3.3130,  1.4677,  0.6085,  0.7510, -0.0300,
          2.2875,  4.5527,  0.6922,  0.4724,  3.5880,  3.2418,  0.9992,  1.8412,
          4.7174,  0.4919,  0.7897,  2.1339,  2.8800,  3.2458,  0.3492,  0.7646,
          2.1253,  0.8293,  1.7716,  5.0976,  0.5295,  4.6862,  1.4478,  4.8784,
          2.9223,  4.0425,  4.6382,  1.4689,  6.2071,  0.5441,  0.8777,  0.9917,
          4.8328,  2.6099,  0.4691,  0.7415,  1.1265,  1.6395,  3.0004,  3.2200]]), tensor([[1.4114, 0.0000, 0.0000, 0.0000, 1.8686, 0.0000, 0.0000, 0.6775, 0.5057,
         1.0537, 0.0000, 0.0000, 0.0000, 1.7179, 0.5187, 0.1971, 0.3440, 1.8401,
         0.9507, 0.0000, 0.1461, 0.5857, 0.3352, 0.1318, 0.1433, 2.3864, 1.2104,
         0.0000, 0.4113, 0.1657, 0.0000, 1.1214, 0.8412, 1.4312, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 1.7699, 0.0000, 0.0000, 0.7731, 0.9997, 0.0000,
         0.4193, 1.1252, 0.9124, 0.0000, 1.8289, 0.0000, 0.0000, 0.0000, 1.3548,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.6168, 0.0000, 1.4149,
         0.8607, 0.0000, 0.0000, 0.0000, 0.2430, 0.1767, 0.0000, 0.0000, 1.3737,
         0.8312, 2.2147, 0.1873, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.2699, 0.4086, 0.0000, 0.0000, 2.6687, 0.0000,
         0.5773, 0.0000, 0.0000, 1.1841, 1.2792, 0.9843, 0.0000, 0.8777, 0.0000,
         0.1816, 0.0000, 0.0000, 0.0000, 0.9149, 0.0000, 1.0528, 0.0000, 0.0000,
         0.0000, 0.0000, 0.1851, 0.0000, 0.0000, 0.0463, 0.0000, 1.0277, 2.2958,
         0.5986, 1.0148, 0.0000, 0.6207, 0.0000, 1.3755, 0.7802, 0.3132, 0.0000,
         0.0000, 0.4625]]), tensor([[-1.4866,  1.2470]])]
8
Traceback (most recent call last):
  File "/gpfs/home3/tpelletreaudur/Probing-GNN-representations/FC_probing_GCN_MDD.py", line 275, in <module>
    train_x8 = np.array([np.array(feat[8], dtype=float) for feat in train_features])
  File "/gpfs/home3/tpelletreaudur/Probing-GNN-representations/FC_probing_GCN_MDD.py", line 275, in <listcomp>
    train_x8 = np.array([np.array(feat[8], dtype=float) for feat in train_features])
IndexError: list index out of range

JOB STATISTICS
==============
Job ID: 8012981
Cluster: snellius
User/Group: tpelletreaudur/tpelletreaudur
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:16:28
CPU Efficiency: 42.59% of 00:38:40 core-walltime
Job Wall-clock time: 00:02:25
Memory Utilized: 1.12 GB
Memory Efficiency: 4.00% of 28.00 GB
